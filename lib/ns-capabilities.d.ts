import { INsCapabilities, AutomationName } from "./interfaces/ns-capabilities";
import { IDevice } from "mobile-devices-controller";
export declare class NsCapabilities implements INsCapabilities {
    private _projectDir;
    private _projectBinary;
    private _pluginRoot;
    private _pluginBinary;
    private _port;
    private _verbose;
    private _appiumCapsLocation;
    private _appiumCaps;
    private _testFolder;
    private _storage;
    private _testReports;
    private _reuseDevice;
    private _devMode;
    private _runType;
    private _isAndroid;
    private _isIOS;
    private _isSauceLab;
    private _appName;
    private _appPath;
    private _path;
    private _emulatorOptions;
    private _automationName;
    private _device;
    private _ignoreDeviceController;
    private _wdaLocalPort;
    private _relaxedSecurity;
    private exceptions;
    constructor();
    readonly path: string;
    readonly projectDir: any;
    readonly projectBinary: any;
    readonly pluginRoot: any;
    readonly pluginBinary: any;
    readonly port: any;
    readonly verbose: any;
    readonly appiumCapsLocation: any;
    readonly appiumCaps: any;
    readonly testFolder: any;
    readonly storage: any;
    readonly testReports: any;
    readonly reuseDevice: any;
    readonly devMode: any;
    readonly runType: any;
    readonly isAndroid: any;
    readonly isIOS: any;
    readonly isSauceLab: any;
    readonly automationName: AutomationName;
    readonly appPath: string;
    appName: string;
    ignoreDeviceController: boolean;
    readonly wdaLocalPort: number;
    device: IDevice;
    readonly emulatorOptions: string;
    readonly relaxedSecurity: boolean;
    private isAndroidPlatform;
    private setAutomationName;
    tryGetAndroidApiLevel(): number;
    private resolveApplication;
    private checkMandatoryCapabiliies;
    private throwExceptions;
}
