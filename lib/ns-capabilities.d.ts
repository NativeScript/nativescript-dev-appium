import { INsCapabilities } from "./interfaces/ns-capabilities";
import { INsCapabilitiesArgs } from "./interfaces/ns-capabilities-args";
import { AutomationName } from "./automation-name";
import { IDevice } from "mobile-devices-controller";
import { IDeviceManager } from "./interfaces/device-manager";
export declare class NsCapabilities implements INsCapabilities {
    private _parser;
    private _projectDir;
    private _projectBinary;
    private _pluginRoot;
    private _pluginBinary;
    private _port;
    private _verbose;
    private _appiumCapsLocation;
    private _appiumCaps;
    private _testFolder;
    private _storage;
    private _testReports;
    private _reuseDevice;
    private _devMode;
    private _runType;
    private _isSauceLab;
    private _wdaLocalPort;
    private _appName;
    private _appPath;
    private _path;
    private _emulatorOptions;
    private _sessionId;
    private _capabilitiesName;
    private _ignoreDeviceController;
    private _relaxedSecurity;
    private _cleanApp;
    private _attachToDebug;
    private _startSession;
    private _isValidated;
    private _automationName;
    private _device;
    private _deviceManager;
    private _exceptions;
    private _imagesPath;
    constructor(_parser: INsCapabilitiesArgs);
    readonly path: string;
    readonly projectDir: string;
    readonly projectBinary: string;
    readonly pluginRoot: string;
    readonly pluginBinary: string;
    port: number;
    verbose: boolean;
    readonly appiumCapsLocation: string;
    appiumCaps: any;
    readonly testFolder: string;
    readonly storage: string;
    readonly testReports: any;
    readonly reuseDevice: boolean;
    readonly devMode: boolean;
    readonly runType: string;
    readonly isAndroid: any;
    readonly isIOS: boolean;
    readonly isSauceLab: boolean;
    readonly automationName: AutomationName;
    readonly appPath: string;
    appName: string;
    ignoreDeviceController: boolean;
    readonly wdaLocalPort: number;
    device: IDevice;
    readonly emulatorOptions: string;
    readonly relaxedSecurity: boolean;
    readonly cleanApp: boolean;
    readonly attachToDebug: boolean;
    sessionId: string;
    readonly startSession: boolean;
    deviceManager: IDeviceManager;
    readonly isValidated: boolean;
    readonly imagesPath: string;
    extend(args: INsCapabilities): this;
    validateArgs(): void;
    private isAndroidPlatform;
    private shouldSetFullResetOption;
    private setAutomationName;
    tryGetAndroidApiLevel(): number;
    private resolveApplication;
    private checkMandatoryCapabiliies;
    private throwExceptions;
}
